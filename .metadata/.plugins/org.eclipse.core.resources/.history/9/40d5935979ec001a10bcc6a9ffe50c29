import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.io.BufferedReader ; 
import java.io.IOException;
import java.nio.charset.StandardCharsets ; 
import java.nio.file.Files ; 
import java.nio.file.Path ; 
import java.nio.file.Paths ; 
import java.util.List ;
import java.util.Scanner ; 
import java.util.stream.*;

import java.io.File; 
import net.sf.javaml.core.Dataset;
import net.sf.javaml.tools.data.FileHandler;


import java.io.BufferedReader;
import java.io.FileNotFoundException ; 
import java.io.FileReader; 
import java.io.IOException; 




public class NN_Tree {
	public static  void main(String args[]) {

		/*
		 * Dimensions of the dataset
		 */
		String Path = "/Users/ujjwal/Documents/DEVELOPMENT/comp303-workspace/Prometheus/Prometheus/src/dataset/wheat-seeds.csv";
		int instance_num = 210 ; 
		int features_num = 8 ; 
		System.out.println("calling processing pipeline"); 
		
		DataProcessingPipeline DATA =  new DataProcessingPipeline(Path,instance_num, features_num ); 
		DATA.DATA_Processing() ; 
		double[][] trainIn = DATA.TRAIN_input(); 
		double[][] trainOut = DATA.TRAIN_output(); 
		System.out.println("");
		System.out.println("");
		System.out.println(".--------------------------.");
		System.out.println("|  DETAILS of the Dataset  |"); 
		System.out.println(".--------------------------.");

		System.out.println("");
		System.out.println("");

		DATA.Details(3);
		int[] structure = {7,7,7,7, 1};
		NN NODE = new NN(structure) ; 
		System.out.println("Start Training.....");
		System.out.println("output data test");
		NODE.VALID_input_checker(trainIn, trainOut) ;
		NODE.TRAIN(trainIn, trainOut, 100 , 4, true);
		double[][] testIn  = new double[trainIn.length][trainIn[0].length]; 
		double[][] testOut  = new double[trainOut.length][1]; 
		for(int i = 0 ; i < 50 ;i++)
		{
			for(int j = 0 ; j < trainIn[0].length ; j++) {
				testIn[i][j] = trainIn[i][j];
			}
		}
		for(int i = 0 ; i < 50 ;i++)
		{
			for(int j = 0 ; j < trainOut[0].length ; j++) {
				testOut[i][j] = trainOut[i][j];
			}
		}
		// testing
		NODE.TEST(testIn, testOut);
//		System.out.println("printingin test output on the test "); 
		
		double[][] predictingInput = {{15.26,14.84,0.871,5.763,3.312,2.221,5.22}}; 
		ArrayList<double[][]>predicted_output = NODE.PREDICT(predictingInput);
//		System.out.println(" predict output");
        System.out.println("-----------------------");  
        System.out.println("|    predicted output  |"); 
        System.out.println("-----------------------");
		System.out.println(predicted_output.get(0)[0][0]);

		
		
		
		 /**
		  * TESING THE DATA GENERATOR
		  */
//		int row_eachCase = 5 ; 
//		UltrasonicData data = new UltrasonicData(row_eachCase) ; 
////		ArrayList<double[]>dataset = data.datagenerator(); 
//		data.datageneratorObstacleAvoidance();
//		ArrayList<double[]> dataset = data.getDataset(); 
////		Collections.shuffle(dataset );		
//		System.out.println("\n"); 
//		System.out.println("TEST DATASET OUTPUT"); 
//		int _case = 0 ; 
//		int case_counter = 0 ; 
//		for( double[] row  : dataset) {
//			if( (_case ) %5 == 0 || _case == 0 ) {
//				case_counter++ ; 
//				System.out.println("----------------------------");
//				System.out.println("CASE <" + (_case/5 + 1) + ">");
//				System.out.println("----------------------------");
//
//			}			_case++;
//
//		
//
////			for (int i = 0 ; i < row.length ; i++) {
////			System.out.println(row[i]); 
////			}
//			System.out.println(Arrays.toString(row));
//			System.out.println("");
//		}
//		
//		
//		
//		
		
		
	}// END OF MAIN
	

} 


































